//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace ToDoApp.ServiceToDo {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ToDo.WCFService.Contracts")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private string E_mailField;
        
        private string NameField;
        
        private string PasswordField;
        
        private string SurnameField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string E_mail {
            get {
                return this.E_mailField;
            }
            set {
                if ((object.ReferenceEquals(this.E_mailField, value) != true)) {
                    this.E_mailField = value;
                    this.RaisePropertyChanged("E_mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToDo", Namespace="http://schemas.datacontract.org/2004/07/ToDo.WCFService.Contracts")]
    public partial class ToDo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreateDateField;
        
        private System.DateTime DeadLineField;
        
        private string DescriptionField;
        
        private int IdField;
        
        private string PriorityField;
        
        private string StatusField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeadLine {
            get {
                return this.DeadLineField;
            }
            set {
                if ((this.DeadLineField.Equals(value) != true)) {
                    this.DeadLineField = value;
                    this.RaisePropertyChanged("DeadLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceToDo.IToDoService")]
    public interface IToDoService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IToDoService/RegisterUser", ReplyAction="http://tempuri.org/IToDoService/RegisterUserResponse")]
        System.IAsyncResult BeginRegisterUser(ToDoApp.ServiceToDo.User user, System.AsyncCallback callback, object asyncState);
        
        bool EndRegisterUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IToDoService/GetUserId", ReplyAction="http://tempuri.org/IToDoService/GetUserIdResponse")]
        System.IAsyncResult BeginGetUserId(string userName, System.AsyncCallback callback, object asyncState);
        
        int EndGetUserId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IToDoService/GetToDos", ReplyAction="http://tempuri.org/IToDoService/GetToDosResponse")]
        System.IAsyncResult BeginGetToDos(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ToDoApp.ServiceToDo.ToDo> EndGetToDos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IToDoService/AddToDo", ReplyAction="http://tempuri.org/IToDoService/AddToDoResponse")]
        System.IAsyncResult BeginAddToDo(ToDoApp.ServiceToDo.ToDo toDO, System.AsyncCallback callback, object asyncState);
        
        bool EndAddToDo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IToDoService/EditToDo", ReplyAction="http://tempuri.org/IToDoService/EditToDoResponse")]
        System.IAsyncResult BeginEditToDo(ToDoApp.ServiceToDo.ToDo toDO, System.AsyncCallback callback, object asyncState);
        
        bool EndEditToDo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IToDoService/DeleteToDo", ReplyAction="http://tempuri.org/IToDoService/DeleteToDoResponse")]
        System.IAsyncResult BeginDeleteToDo(int id, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteToDo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IToDoService/GetStatusValues", ReplyAction="http://tempuri.org/IToDoService/GetStatusValuesResponse")]
        System.IAsyncResult BeginGetStatusValues(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<int, string> EndGetStatusValues(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IToDoService/GetPriorityValues", ReplyAction="http://tempuri.org/IToDoService/GetPriorityValuesResponse")]
        System.IAsyncResult BeginGetPriorityValues(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<int, string> EndGetPriorityValues(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IToDoServiceChannel : ToDoApp.ServiceToDo.IToDoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetToDosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetToDosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ToDoApp.ServiceToDo.ToDo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ToDoApp.ServiceToDo.ToDo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddToDoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddToDoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditToDoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditToDoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteToDoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteToDoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStatusValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStatusValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<int, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<int, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPriorityValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPriorityValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<int, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<int, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ToDoServiceClient : System.ServiceModel.ClientBase<ToDoApp.ServiceToDo.IToDoService>, ToDoApp.ServiceToDo.IToDoService {
        
        private BeginOperationDelegate onBeginRegisterUserDelegate;
        
        private EndOperationDelegate onEndRegisterUserDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserIdDelegate;
        
        private EndOperationDelegate onEndGetUserIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetToDosDelegate;
        
        private EndOperationDelegate onEndGetToDosDelegate;
        
        private System.Threading.SendOrPostCallback onGetToDosCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddToDoDelegate;
        
        private EndOperationDelegate onEndAddToDoDelegate;
        
        private System.Threading.SendOrPostCallback onAddToDoCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditToDoDelegate;
        
        private EndOperationDelegate onEndEditToDoDelegate;
        
        private System.Threading.SendOrPostCallback onEditToDoCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteToDoDelegate;
        
        private EndOperationDelegate onEndDeleteToDoDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteToDoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStatusValuesDelegate;
        
        private EndOperationDelegate onEndGetStatusValuesDelegate;
        
        private System.Threading.SendOrPostCallback onGetStatusValuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPriorityValuesDelegate;
        
        private EndOperationDelegate onEndGetPriorityValuesDelegate;
        
        private System.Threading.SendOrPostCallback onGetPriorityValuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ToDoServiceClient() {
        }
        
        public ToDoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ToDoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ToDoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ToDoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<RegisterUserCompletedEventArgs> RegisterUserCompleted;
        
        public event System.EventHandler<GetUserIdCompletedEventArgs> GetUserIdCompleted;
        
        public event System.EventHandler<GetToDosCompletedEventArgs> GetToDosCompleted;
        
        public event System.EventHandler<AddToDoCompletedEventArgs> AddToDoCompleted;
        
        public event System.EventHandler<EditToDoCompletedEventArgs> EditToDoCompleted;
        
        public event System.EventHandler<DeleteToDoCompletedEventArgs> DeleteToDoCompleted;
        
        public event System.EventHandler<GetStatusValuesCompletedEventArgs> GetStatusValuesCompleted;
        
        public event System.EventHandler<GetPriorityValuesCompletedEventArgs> GetPriorityValuesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ToDoApp.ServiceToDo.IToDoService.BeginRegisterUser(ToDoApp.ServiceToDo.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ToDoApp.ServiceToDo.IToDoService.EndRegisterUser(System.IAsyncResult result) {
            return base.Channel.EndRegisterUser(result);
        }
        
        private System.IAsyncResult OnBeginRegisterUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ToDoApp.ServiceToDo.User user = ((ToDoApp.ServiceToDo.User)(inValues[0]));
            return ((ToDoApp.ServiceToDo.IToDoService)(this)).BeginRegisterUser(user, callback, asyncState);
        }
        
        private object[] OnEndRegisterUser(System.IAsyncResult result) {
            bool retVal = ((ToDoApp.ServiceToDo.IToDoService)(this)).EndRegisterUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterUserCompleted(object state) {
            if ((this.RegisterUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterUserCompleted(this, new RegisterUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterUserAsync(ToDoApp.ServiceToDo.User user) {
            this.RegisterUserAsync(user, null);
        }
        
        public void RegisterUserAsync(ToDoApp.ServiceToDo.User user, object userState) {
            if ((this.onBeginRegisterUserDelegate == null)) {
                this.onBeginRegisterUserDelegate = new BeginOperationDelegate(this.OnBeginRegisterUser);
            }
            if ((this.onEndRegisterUserDelegate == null)) {
                this.onEndRegisterUserDelegate = new EndOperationDelegate(this.OnEndRegisterUser);
            }
            if ((this.onRegisterUserCompletedDelegate == null)) {
                this.onRegisterUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterUserCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterUserDelegate, new object[] {
                        user}, this.onEndRegisterUserDelegate, this.onRegisterUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ToDoApp.ServiceToDo.IToDoService.BeginGetUserId(string userName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserId(userName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int ToDoApp.ServiceToDo.IToDoService.EndGetUserId(System.IAsyncResult result) {
            return base.Channel.EndGetUserId(result);
        }
        
        private System.IAsyncResult OnBeginGetUserId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            return ((ToDoApp.ServiceToDo.IToDoService)(this)).BeginGetUserId(userName, callback, asyncState);
        }
        
        private object[] OnEndGetUserId(System.IAsyncResult result) {
            int retVal = ((ToDoApp.ServiceToDo.IToDoService)(this)).EndGetUserId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserIdCompleted(object state) {
            if ((this.GetUserIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserIdCompleted(this, new GetUserIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserIdAsync(string userName) {
            this.GetUserIdAsync(userName, null);
        }
        
        public void GetUserIdAsync(string userName, object userState) {
            if ((this.onBeginGetUserIdDelegate == null)) {
                this.onBeginGetUserIdDelegate = new BeginOperationDelegate(this.OnBeginGetUserId);
            }
            if ((this.onEndGetUserIdDelegate == null)) {
                this.onEndGetUserIdDelegate = new EndOperationDelegate(this.OnEndGetUserId);
            }
            if ((this.onGetUserIdCompletedDelegate == null)) {
                this.onGetUserIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserIdDelegate, new object[] {
                        userName}, this.onEndGetUserIdDelegate, this.onGetUserIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ToDoApp.ServiceToDo.IToDoService.BeginGetToDos(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetToDos(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ToDoApp.ServiceToDo.ToDo> ToDoApp.ServiceToDo.IToDoService.EndGetToDos(System.IAsyncResult result) {
            return base.Channel.EndGetToDos(result);
        }
        
        private System.IAsyncResult OnBeginGetToDos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ToDoApp.ServiceToDo.IToDoService)(this)).BeginGetToDos(callback, asyncState);
        }
        
        private object[] OnEndGetToDos(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ToDoApp.ServiceToDo.ToDo> retVal = ((ToDoApp.ServiceToDo.IToDoService)(this)).EndGetToDos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetToDosCompleted(object state) {
            if ((this.GetToDosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetToDosCompleted(this, new GetToDosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetToDosAsync() {
            this.GetToDosAsync(null);
        }
        
        public void GetToDosAsync(object userState) {
            if ((this.onBeginGetToDosDelegate == null)) {
                this.onBeginGetToDosDelegate = new BeginOperationDelegate(this.OnBeginGetToDos);
            }
            if ((this.onEndGetToDosDelegate == null)) {
                this.onEndGetToDosDelegate = new EndOperationDelegate(this.OnEndGetToDos);
            }
            if ((this.onGetToDosCompletedDelegate == null)) {
                this.onGetToDosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetToDosCompleted);
            }
            base.InvokeAsync(this.onBeginGetToDosDelegate, null, this.onEndGetToDosDelegate, this.onGetToDosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ToDoApp.ServiceToDo.IToDoService.BeginAddToDo(ToDoApp.ServiceToDo.ToDo toDO, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddToDo(toDO, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ToDoApp.ServiceToDo.IToDoService.EndAddToDo(System.IAsyncResult result) {
            return base.Channel.EndAddToDo(result);
        }
        
        private System.IAsyncResult OnBeginAddToDo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ToDoApp.ServiceToDo.ToDo toDO = ((ToDoApp.ServiceToDo.ToDo)(inValues[0]));
            return ((ToDoApp.ServiceToDo.IToDoService)(this)).BeginAddToDo(toDO, callback, asyncState);
        }
        
        private object[] OnEndAddToDo(System.IAsyncResult result) {
            bool retVal = ((ToDoApp.ServiceToDo.IToDoService)(this)).EndAddToDo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddToDoCompleted(object state) {
            if ((this.AddToDoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddToDoCompleted(this, new AddToDoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddToDoAsync(ToDoApp.ServiceToDo.ToDo toDO) {
            this.AddToDoAsync(toDO, null);
        }
        
        public void AddToDoAsync(ToDoApp.ServiceToDo.ToDo toDO, object userState) {
            if ((this.onBeginAddToDoDelegate == null)) {
                this.onBeginAddToDoDelegate = new BeginOperationDelegate(this.OnBeginAddToDo);
            }
            if ((this.onEndAddToDoDelegate == null)) {
                this.onEndAddToDoDelegate = new EndOperationDelegate(this.OnEndAddToDo);
            }
            if ((this.onAddToDoCompletedDelegate == null)) {
                this.onAddToDoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddToDoCompleted);
            }
            base.InvokeAsync(this.onBeginAddToDoDelegate, new object[] {
                        toDO}, this.onEndAddToDoDelegate, this.onAddToDoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ToDoApp.ServiceToDo.IToDoService.BeginEditToDo(ToDoApp.ServiceToDo.ToDo toDO, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditToDo(toDO, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ToDoApp.ServiceToDo.IToDoService.EndEditToDo(System.IAsyncResult result) {
            return base.Channel.EndEditToDo(result);
        }
        
        private System.IAsyncResult OnBeginEditToDo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ToDoApp.ServiceToDo.ToDo toDO = ((ToDoApp.ServiceToDo.ToDo)(inValues[0]));
            return ((ToDoApp.ServiceToDo.IToDoService)(this)).BeginEditToDo(toDO, callback, asyncState);
        }
        
        private object[] OnEndEditToDo(System.IAsyncResult result) {
            bool retVal = ((ToDoApp.ServiceToDo.IToDoService)(this)).EndEditToDo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditToDoCompleted(object state) {
            if ((this.EditToDoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditToDoCompleted(this, new EditToDoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditToDoAsync(ToDoApp.ServiceToDo.ToDo toDO) {
            this.EditToDoAsync(toDO, null);
        }
        
        public void EditToDoAsync(ToDoApp.ServiceToDo.ToDo toDO, object userState) {
            if ((this.onBeginEditToDoDelegate == null)) {
                this.onBeginEditToDoDelegate = new BeginOperationDelegate(this.OnBeginEditToDo);
            }
            if ((this.onEndEditToDoDelegate == null)) {
                this.onEndEditToDoDelegate = new EndOperationDelegate(this.OnEndEditToDo);
            }
            if ((this.onEditToDoCompletedDelegate == null)) {
                this.onEditToDoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditToDoCompleted);
            }
            base.InvokeAsync(this.onBeginEditToDoDelegate, new object[] {
                        toDO}, this.onEndEditToDoDelegate, this.onEditToDoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ToDoApp.ServiceToDo.IToDoService.BeginDeleteToDo(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteToDo(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ToDoApp.ServiceToDo.IToDoService.EndDeleteToDo(System.IAsyncResult result) {
            return base.Channel.EndDeleteToDo(result);
        }
        
        private System.IAsyncResult OnBeginDeleteToDo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((ToDoApp.ServiceToDo.IToDoService)(this)).BeginDeleteToDo(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteToDo(System.IAsyncResult result) {
            bool retVal = ((ToDoApp.ServiceToDo.IToDoService)(this)).EndDeleteToDo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteToDoCompleted(object state) {
            if ((this.DeleteToDoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteToDoCompleted(this, new DeleteToDoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteToDoAsync(int id) {
            this.DeleteToDoAsync(id, null);
        }
        
        public void DeleteToDoAsync(int id, object userState) {
            if ((this.onBeginDeleteToDoDelegate == null)) {
                this.onBeginDeleteToDoDelegate = new BeginOperationDelegate(this.OnBeginDeleteToDo);
            }
            if ((this.onEndDeleteToDoDelegate == null)) {
                this.onEndDeleteToDoDelegate = new EndOperationDelegate(this.OnEndDeleteToDo);
            }
            if ((this.onDeleteToDoCompletedDelegate == null)) {
                this.onDeleteToDoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteToDoCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteToDoDelegate, new object[] {
                        id}, this.onEndDeleteToDoDelegate, this.onDeleteToDoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ToDoApp.ServiceToDo.IToDoService.BeginGetStatusValues(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStatusValues(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<int, string> ToDoApp.ServiceToDo.IToDoService.EndGetStatusValues(System.IAsyncResult result) {
            return base.Channel.EndGetStatusValues(result);
        }
        
        private System.IAsyncResult OnBeginGetStatusValues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ToDoApp.ServiceToDo.IToDoService)(this)).BeginGetStatusValues(callback, asyncState);
        }
        
        private object[] OnEndGetStatusValues(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<int, string> retVal = ((ToDoApp.ServiceToDo.IToDoService)(this)).EndGetStatusValues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStatusValuesCompleted(object state) {
            if ((this.GetStatusValuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStatusValuesCompleted(this, new GetStatusValuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStatusValuesAsync() {
            this.GetStatusValuesAsync(null);
        }
        
        public void GetStatusValuesAsync(object userState) {
            if ((this.onBeginGetStatusValuesDelegate == null)) {
                this.onBeginGetStatusValuesDelegate = new BeginOperationDelegate(this.OnBeginGetStatusValues);
            }
            if ((this.onEndGetStatusValuesDelegate == null)) {
                this.onEndGetStatusValuesDelegate = new EndOperationDelegate(this.OnEndGetStatusValues);
            }
            if ((this.onGetStatusValuesCompletedDelegate == null)) {
                this.onGetStatusValuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStatusValuesCompleted);
            }
            base.InvokeAsync(this.onBeginGetStatusValuesDelegate, null, this.onEndGetStatusValuesDelegate, this.onGetStatusValuesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ToDoApp.ServiceToDo.IToDoService.BeginGetPriorityValues(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPriorityValues(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<int, string> ToDoApp.ServiceToDo.IToDoService.EndGetPriorityValues(System.IAsyncResult result) {
            return base.Channel.EndGetPriorityValues(result);
        }
        
        private System.IAsyncResult OnBeginGetPriorityValues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ToDoApp.ServiceToDo.IToDoService)(this)).BeginGetPriorityValues(callback, asyncState);
        }
        
        private object[] OnEndGetPriorityValues(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<int, string> retVal = ((ToDoApp.ServiceToDo.IToDoService)(this)).EndGetPriorityValues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPriorityValuesCompleted(object state) {
            if ((this.GetPriorityValuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPriorityValuesCompleted(this, new GetPriorityValuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPriorityValuesAsync() {
            this.GetPriorityValuesAsync(null);
        }
        
        public void GetPriorityValuesAsync(object userState) {
            if ((this.onBeginGetPriorityValuesDelegate == null)) {
                this.onBeginGetPriorityValuesDelegate = new BeginOperationDelegate(this.OnBeginGetPriorityValues);
            }
            if ((this.onEndGetPriorityValuesDelegate == null)) {
                this.onEndGetPriorityValuesDelegate = new EndOperationDelegate(this.OnEndGetPriorityValues);
            }
            if ((this.onGetPriorityValuesCompletedDelegate == null)) {
                this.onGetPriorityValuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPriorityValuesCompleted);
            }
            base.InvokeAsync(this.onBeginGetPriorityValuesDelegate, null, this.onEndGetPriorityValuesDelegate, this.onGetPriorityValuesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ToDoApp.ServiceToDo.IToDoService CreateChannel() {
            return new ToDoServiceClientChannel(this);
        }
        
        private class ToDoServiceClientChannel : ChannelBase<ToDoApp.ServiceToDo.IToDoService>, ToDoApp.ServiceToDo.IToDoService {
            
            public ToDoServiceClientChannel(System.ServiceModel.ClientBase<ToDoApp.ServiceToDo.IToDoService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginRegisterUser(ToDoApp.ServiceToDo.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("RegisterUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRegisterUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RegisterUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserId(string userName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userName;
                System.IAsyncResult _result = base.BeginInvoke("GetUserId", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetUserId(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetUserId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetToDos(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetToDos", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ToDoApp.ServiceToDo.ToDo> EndGetToDos(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ToDoApp.ServiceToDo.ToDo> _result = ((System.Collections.ObjectModel.ObservableCollection<ToDoApp.ServiceToDo.ToDo>)(base.EndInvoke("GetToDos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddToDo(ToDoApp.ServiceToDo.ToDo toDO, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = toDO;
                System.IAsyncResult _result = base.BeginInvoke("AddToDo", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddToDo(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddToDo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditToDo(ToDoApp.ServiceToDo.ToDo toDO, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = toDO;
                System.IAsyncResult _result = base.BeginInvoke("EditToDo", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndEditToDo(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("EditToDo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteToDo(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteToDo", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteToDo(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteToDo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStatusValues(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetStatusValues", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<int, string> EndGetStatusValues(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<int, string> _result = ((System.Collections.Generic.Dictionary<int, string>)(base.EndInvoke("GetStatusValues", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPriorityValues(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPriorityValues", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<int, string> EndGetPriorityValues(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<int, string> _result = ((System.Collections.Generic.Dictionary<int, string>)(base.EndInvoke("GetPriorityValues", _args, result)));
                return _result;
            }
        }
    }
}
